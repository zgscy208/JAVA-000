<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.week8homework.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.example.week8homework.entity.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="acc_id" property="accId" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="pay_amount" property="payAmount" jdbcType="INTEGER" />
    <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="refund_time" property="refundTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, acc_id, goods_id, pay_amount, pay_status, pay_time, refund_time, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from train_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from train_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.week8homework.entity.Order" >
    insert into train_order (id, acc_id, goods_id,
      pay_amount, pay_status, pay_time, 
      refund_time, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{accId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, 
      #{payAmount,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, 
      #{refundTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.week8homework.entity.Order" >
    insert into train_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accId != null" >
        acc_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="refundTime != null" >
        refund_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accId != null" >
        #{accId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null" >
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.week8homework.entity.Order" >
    update train_order
    <set >
      <if test="accId != null" >
        acc_id = #{accId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null" >
        refund_time = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.week8homework.entity.Order" >
    update train_order
    set acc_id = #{accId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=BIGINT},
      pay_amount = #{payAmount,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      refund_time = #{refundTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsertOrder" useGeneratedKeys="true">
    INSERT INTO train_order
    (acc_id, goods_id,
    pay_amount, pay_status, create_time, update_time)
    VALUES
    <foreach collection="orderList" separator="," item="item">
      (
      #{item.accId},
      #{item.goodsId},
      #{item.payAmount},
      #{item.payStatus},
      #{item.createTime},
      #{item.updateTime}
      )
    </foreach>
  </insert>
</mapper>